[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
authors = [
    { name = "BlueGlassBlock", email = "blueglassblock@outlook.com" },
    { name = "GreyElaina", email = "GreyElaina@outlook.com" },
]
requires-python = ">=3.8,<4.0"
dependencies = [
    "graia-broadcast~=0.23.0",
    "aiohttp~=3.8",
    "pydantic~=1.9",
    "typing-extensions>=4.4,<5.0",
    "graia-amnesia~=0.7.0",
    "launart>=0.6.4,<0.7",
    "packaging>=23.0",
    "creart~=0.3.0",
]
name = "graia-ariadne"
description = "Another elegant Python QQ Bot framework for mirai and mirai-api-http v2."
readme = "README.md"
keywords = ["graia", "bot", "qq", "framework", "mirai", "ariadne"]
classifiers = [
    "Topic :: Communications :: Chat",
    "Framework :: Robot Framework :: Library",
    "Framework :: AsyncIO",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
dynamic = ["version"]

[project.urls]
repository = "https://github.com/GraiaProject/Ariadne"
documentation = "https://graia.readthedocs.io/projects/ariadne"

[project.entry-points."creart.creators"]
commander = "graia.ariadne.message.commander.creart:CommanderCreator"
commander_behaviour = "graia.ariadne.message.commander.creart:CommanderBehaviourCreator"

[project.optional-dependencies]
standard = ["richuru~=0.1", "graia-scheduler~=0.1.1", "graia-saya~=0.0"]
graia = ["graia-scheduler~=0.1.1", "graia-saya~=0.0"]
fastapi = ["fastapi<1.0.0,>=0.74.1", "uvicorn[standard]<1.0.0,>=0.17.5"]
full = ["richuru~=0.1", "graia-scheduler~=0.1.1", "graia-saya~=0.0"]

[tool.pdm]

[tool.pdm.dev-dependencies]
dev = [
    "black>=22.6.0",
    "pytest<8.0,>=7.1",
    "coverage<7.0,>=6.4",
    "pytest-asyncio<1.0.0,>=0.19.0",
    "devtools>=0.9",
    "pre-commit<3.0,>=2.20",
    "mkdocstrings[python]<1.0.0,>=0.19.0",
    "mkdocs-material>=8.4.0",
    "mkdocs-gen-files<1.0.0,>=0.3.5",
    "mkdocs-section-index<1.0.0,>=0.3.4",
    "mkdocs-literate-nav<1.0.0,>=0.4.1",
    "ipykernel<7.0.0,>=6.15.1",
    "richuru<1.0.0,>=0.1.1",
    "graia-scheduler<1.0,>=0.0",
    "fastapi<1.0.0,>=0.79.0",
    "uvicorn[standard]<1.0.0,>=0.18.2",
    "graia-saya>=0.0.16",
    "ruff>=0.0.132",
]

[tool.pdm.build]
includes = ["src/graia"]

[tool.pdm.version]
source = "file"
path = "src/graia/ariadne/__init__.py"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.black]
line-length = 110
target-version = ['py39']

[tool.coverage.run]
branch = true
omit = ["*/test/*"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # standard pragma
    "pragma: no cover",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING( is True)?:",
    "\\.\\.\\.",
    "pass",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Don't complain overload method / functions
    "@(typing\\.)?overload",
]

[tool.pyright]
ignore = [
    "docs/**",
    "**/site-packages/**/*.py",
    "**/test*/**/*.py",
    "**/adapter/**",
    "**/temp/**/*.py",
]
reportShadowedImports = false

[tool.ruff]
line-length = 110

select = ["E", "F", "I", "UP", "C", "T", "Q"]
ignore = ["C901"]

# Exclude a variety of commonly ignored directories.
extend-exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "src/graia/ariadne/entry/*",
    "src/test/**",
    "src/test_old/**",
    "gen_ref.py",
    "extract-release-notes.py"
]

target-version = "py38"

[tool.ruff.isort]
known-first-party = ["graia"]
extra-standard-library = ["typing_extensions"]
